#!/bin/sh

wdir=${1}
image=${2}
mp=''

prepare_include_commands(){
    local root="${1}"
    local menu_dir="${2}"
    local include='^\s*include\s\+'
    local menufile='\S\+'
    sed -n -e "
    /${include}${menufile}\s*/I {
        =
        s|\(${include}\)\([^/]\)|\1/${menu_dir}/\2|I
        s|${include}\([/]${menufile}\)|{\n  r ${root}\1\n  d \n}|I
        p
    }"
}

remove_newlines(){
    local step=$(for i in $(seq ${1:-1}); do echo -n 'N;'; done)
    sed -n -e "${step}s/\n//;p"
}

find_bootloader_cfg(){
    local dir=$(readlink -f "${1}")
    local cfg=$(find "$dir" -maxdepth 4 -name 'isolinux.cfg' -type f | head -1)
    echo "${cfg#${dir}}"
}

panic(){
    echo "Error processing iso. ${1}"
    exit 1
}

extract_menu_items(){
    local default='^\s*menu default\s*'
    local label='^\s*label\s\+'
    local kernel='^\(\s*kernel\s\+\)'
    local append='^\s*append\s\+'
    local default_item_file="${1}"
    local menu_dir="${2}"
    sed -n -e "
    /^\s*\(label\|kernel\|append\)\s\+/I {
        s_^\s*__
        s_^\(\S\+\)\s\+_\L\1 _
        s|${kernel}\([^/]\)|\1/${menu_dir}/\2|I
        /${append}/ I{
          s|\(initrd=\)\([^/]\)|\1/${menu_dir}/\2|I
        }
        p
        /${label}/I {
            s|${label}||I
            h
        }
    }
    /${default}/I {
        x
        /^$/ ! {
            w ${default_item_file}
        }
    }"
}

[ -n "${image}" ] && [ -n "${wdir}" ] || panic 'Bad arguments'
mkdir -p "${wdir}"
[ -d "${wdir}" ] || panic 'Bad temporary directory'
if [ -f "${image}" ]
then
    mp="${wdir}/mp"
    if ! [ -d "${mp}" ]; then
        mkdir -p "${mp}"
        mount -o loop "${image}" "${mp}" || panic 'Cannot mount image'
    fi
else
    mp="${image}"
fi
mp=$(readlink -f "${mp}")

cfg=$(find_bootloader_cfg  "${mp}")
[ -n "${cfg}" ] || panic 'Cannot find boot config'
menu_dir="${cfg%/*}"
if [ "${menu_dir}" = "${cfg}" ]; then
    menu_dir=""
fi
orig_cfg="${mp}/${cfg}"
[ -r "${orig_cfg}" ] || panic 'Cannot find boot config'
cp "${orig_cfg}" "${wdir}/cfg"
chmod +w "${wdir}/cfg"

includes_level=0
while [ "${includes_level}" -lt 8  ]
do
    cat "${wdir}/cfg" | prepare_include_commands "${mp}" "${menu_dir}" | remove_newlines 4 > "${wdir}/include.sed"
    [ ${?} -eq 0 ] || panic 'ISO parsing error'
    sed -i -f "${wdir}/include.sed" "${wdir}/cfg"
    [ ${?} -eq 0 ] || panic 'ISO parsing error'
    includes_level=$((includes_level+1))
done

[ -s "${wdir}/cfg" ] || panic 'Error processing config'
cat "${wdir}/cfg" | extract_menu_items "${wdir}/default_label" "${menu_dir}" > "${wdir}/isolinux.cfg"
[ ${?} -eq 0 ] || panic 'ISO parsing error'
